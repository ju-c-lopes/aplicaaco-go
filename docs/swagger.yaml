basePath: /
definitions:
  entities.AcompanhamentoPedido:
    properties:
      id:
        type: integer
      pedidos:
        items:
          $ref: '#/definitions/entities.Pedido'
        type: array
      tempo_estimado:
        type: string
      ultima_atualizacao:
        type: string
    type: object
  entities.CatProduto:
    enum:
    - Lanche
    - Acompanhamento
    - Bebida
    - Sobremesa
    type: string
    x-enum-varnames:
    - Lanche
    - Acompanhamento
    - Bebida
    - Sobremesa
  entities.Cliente:
    properties:
      cpf:
        type: string
      email:
        type: string
      nome:
        type: string
    type: object
  entities.Pagamento:
    properties:
      dataCriacao:
        type: string
      idPagamento:
        type: integer
      idPedido:
        type: integer
      status:
        type: string
      valor:
        type: number
    type: object
  entities.Pedido:
    properties:
      cliente_cpf:
        type: string
      id:
        type: integer
      produtos:
        items:
          $ref: '#/definitions/entities.Produto'
        type: array
      status:
        $ref: '#/definitions/entities.StatusPedido'
      status_pagamento:
        type: string
      time_stamp:
        type: string
      total:
        type: number
      ultima_atualizacao:
        type: string
    type: object
  entities.Produto:
    properties:
      categoriaProduto:
        $ref: '#/definitions/entities.CatProduto'
      descricaoProduto:
        type: string
      id:
        type: integer
      nomeProduto:
        type: string
      personalizacaoProduto:
        $ref: '#/definitions/sql.NullString'
      precoProduto:
        type: number
    type: object
  entities.StatusPedido:
    enum:
    - Pendente
    - Recebido
    - Em preparação
    - Pronto
    - Finalizado
    type: string
    x-enum-varnames:
    - Pendente
    - Recebido
    - EmPreparacao
    - Pronto
    - Finalizado
  handler.StatusUpdateRequest:
    properties:
      status:
        example: Em preparação
        type: string
    type: object
  presenters.AcompanhamentoDTO:
    properties:
      id:
        type: string
      pedidos:
        items:
          $ref: '#/definitions/presenters.PedidoDTO'
        type: array
      tempoEstimado:
        description: in minutes
        type: string
    type: object
  presenters.ClienteDTO:
    properties:
      cpf:
        type: string
      email:
        type: string
      nome:
        type: string
    type: object
  presenters.ItemPedidoDTO:
    properties:
      nomeProduto:
        type: string
      precoUnitario:
        type: number
      produtoId:
        type: integer
      quantidade:
        type: integer
      subtotal:
        type: number
    type: object
  presenters.PedidoDTO:
    properties:
      cliente:
        type: string
      id:
        type: string
      identificacao:
        type: string
      itens:
        items:
          $ref: '#/definitions/presenters.ItemPedidoDTO'
        type: array
      status:
        $ref: '#/definitions/entities.StatusPedido'
      tempoEstimado:
        $ref: '#/definitions/time.Duration'
      total:
        type: number
    type: object
  presenters.ProdutoDTO:
    properties:
      categoria:
        $ref: '#/definitions/entities.CatProduto'
      descricao:
        type: string
      identificacao:
        type: integer
      nome:
        type: string
      preco:
        type: number
    type: object
  response.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  response.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  sql.NullString:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
  time.Duration:
    enum:
    - -9223372036854775808
    - 9223372036854775807
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    type: integer
    x-enum-varnames:
    - minDuration
    - maxDuration
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
host: localhost:8080
info:
  contact: {}
  description: API para o Tech Challenge 2 da FIAP - SOAT
  title: Lanchonete API - Tech Challenge 2
  version: "1.0"
paths:
  /acompanhamento:
    post:
      consumes:
      - application/json
      description: Cria um acompanhamento
      parameters:
      - description: Acompanhamento
        in: body
        name: acompanhamento
        required: true
        schema:
          $ref: '#/definitions/entities.AcompanhamentoPedido'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Cria um acompanhamento
      tags:
      - acompanhamento
  /acompanhamento/{ID}:
    get:
      consumes:
      - application/json
      description: Busca um acompanhamento pelo ID
      parameters:
      - description: ID do acompanhamento
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenters.AcompanhamentoDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Acompanhamento não encontrado
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Busca um acompanhamento
      tags:
      - acompanhamento
  /acompanhamento/{ID}/pedidos:
    get:
      consumes:
      - application/json
      description: Busca os pedidos associados a um acompanhamento
      parameters:
      - description: ID do acompanhamento
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Pedido'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Acompanhamento não encontrado
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Erro interno
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Busca os pedidos de um acompanhamento
      tags:
      - acompanhamento
  /acompanhamento/{IDAcompanhamento}/{IDPedido}:
    post:
      consumes:
      - application/json
      description: Adiciona um pedido existente ao acompanhamento de pedidos
      parameters:
      - description: ID do acompanhamento
        in: path
        name: IDAcompanhamento
        required: true
        type: string
      - description: ID do pedido
        in: path
        name: IDPedido
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Pedido ou acompanhamento não encontrado
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Erro interno
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Adiciona um pedido ao acompanhamento
      tags:
      - acompanhamento
  /acompanhamento/{IDAcompanhamento}/pedido/{IDPedido}/status:
    put:
      consumes:
      - application/json
      description: Atualiza o status de um pedido no acompanhamento
      parameters:
      - description: ID do acompanhamento
        in: path
        name: IDAcompanhamento
        required: true
        type: string
      - description: ID do pedido
        in: path
        name: IDPedido
        required: true
        type: string
      - description: Novo status do pedido
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/handler.StatusUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Pedido ou acompanhamento não encontrado
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Atualiza o status de um pedido
      tags:
      - acompanhamento
  /cliente:
    post:
      consumes:
      - application/json
      description: Cria um cliente
      parameters:
      - description: Cliente
        in: body
        name: cliente
        required: true
        schema:
          $ref: '#/definitions/entities.Cliente'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Cria um cliente
      tags:
      - cliente
  /cliente/{CPF}:
    get:
      consumes:
      - application/json
      description: Busca um cliente
      parameters:
      - description: CPF do cliente
        in: path
        name: CPF
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenters.ClienteDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Busca um cliente
      tags:
      - cliente
  /pagamento:
    post:
      consumes:
      - application/json
      description: Envia o pagamento para o webhook
      parameters:
      - description: Pagamento
        in: body
        name: pagamento
        required: true
        schema:
          $ref: '#/definitions/entities.Pagamento'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Envia o pagamento para o webhook
      tags:
      - pagamento
  /pagamento/confirmar:
    post:
      consumes:
      - application/json
      description: Confirma o pagamento
      parameters:
      - description: Pagamento
        in: body
        name: pagamento
        required: true
        schema:
          $ref: '#/definitions/entities.Pagamento'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Confirma o pagamento
      tags:
      - pagamento
  /pedidos:
    post:
      consumes:
      - application/json
      description: Cria um pedido
      parameters:
      - description: Pedido
        in: body
        name: pedido
        required: true
        schema:
          $ref: '#/definitions/entities.Pedido'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Cria um pedido
      tags:
      - pedido
  /pedidos/{ID}:
    get:
      consumes:
      - application/json
      description: Busca um pedido
      parameters:
      - description: Número do pedido
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Pedido'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Busca um pedido
      tags:
      - pedido
  /pedidos/{nroPedido}/status/{status}:
    put:
      consumes:
      - application/json
      description: Atualizar um pedido
      parameters:
      - description: Número do pedido
        in: path
        name: nroPedido
        required: true
        type: string
      - description: Novo Status do pedido
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Pedido'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Atualiza um pedido a partir de sua Identificação
      tags:
      - pedido
  /pedidos/listartodos:
    post:
      consumes:
      - application/json
      description: Lista todos os pedidos presentes no banco
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Pedido'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Lista todos os pedidos no banco
      tags:
      - pedido
  /produto:
    post:
      consumes:
      - application/json
      description: Cria um produto
      parameters:
      - description: Produto
        in: body
        name: produto
        required: true
        schema:
          $ref: '#/definitions/entities.Produto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Cria um produto
      tags:
      - produto
  /produto/{id}:
    get:
      consumes:
      - application/json
      description: Busca um produto
      parameters:
      - description: ID do produto
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenters.ProdutoDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Busca um produto
      tags:
      - produto
  /produto/{nome}:
    delete:
      consumes:
      - application/json
      description: Remove um produto
      parameters:
      - description: nome do produto
        in: path
        name: nome
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Remove um produto
      tags:
      - produto
  /produtos:
    get:
      consumes:
      - application/json
      description: Lista todos os produtos cadastrados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Produto'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Lista todos os produtos no banco
      tags:
      - produto
    put:
      consumes:
      - application/json
      description: Edita um produto existente pelo nome
      parameters:
      - description: Produto
        in: body
        name: produto
        required: true
        schema:
          $ref: '#/definitions/entities.Produto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Edita um produto
      tags:
      - produto
  /produtos/{categoria}:
    get:
      consumes:
      - application/json
      description: Lista todos os produtos por categoria
      parameters:
      - description: Categoria de produtos
        in: path
        name: categoria
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Produto'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Lista os produtos por categoria
      tags:
      - produto
swagger: "2.0"
